![image-20240404200203366](C:\Users\set\AppData\Roaming\Typora\typora-user-images\image-20240404200203366.png)

![image-20240402144056480](C:\Users\set\AppData\Roaming\Typora\typora-user-images\image-20240402144056480.png)

![image-20240402144127821](C:\Users\set\AppData\Roaming\Typora\typora-user-images\image-20240402144127821.png)



```
#include <bits/stdc++.h>
using namespace std;
using ll=long long;

const int N = 2e5+9;
int a[N];

void solve()
{
	int n,q;cin>>n>>q;
	for(int i =1;i<=n;++i)cin>>a[i];
	

	while(q--)
	{
		int x;cin>>x;
		
		int l=0,r=n;
	
		while(l+1!=r)
		{
			int mid =(l+r)>>1;//位运算 求中点 前提是 l 和 r 都是非负整数，并且它们的和不会溢出
			if(a[mid]<x)l=mid;
			else r =mid;
		}
	
		if(a[r]==x)cout<<r<<' ';
		else cout<< -1<<' ';
	}

}

int main()
{
	ios::sync_with_stdio(0),cin.tie(0),cout.tie(0);
	

	int _=1;
	while(_--)solve();
	
	return 0;

}


```

